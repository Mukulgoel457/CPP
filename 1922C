//------------------Mukul457-----------------------------------

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_pbds;
//template <typename PB>
#define ll long long int
#define be begin()
#define en end()
#define pb push_back
#define pyes cout << "YES\n"
#define pno cout << "NO\n"
#define ce cout << '\n'
#define endl '\n'
#define pie 3.141592653589793238462643383279502884197169399
#define print(x) cout<<x<<endl
#define printb(x) cout<<x<<" "
#define rev(v) reverse(v.begin(), v.end())
#define srt(v) sort(v.begin(), v.end())
#define all(v) v.begin(), v.end()
#define mnv(v) *min_element(v.begin(), v.end())
#define mxv(v) *max_element(v.begin(), v.end())
#define fi first
#define se second
#define vll vector<ll>
#define vp vector<pair<ll,ll>>
typedef tree<ll,null_type,less_equal<ll>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

ll mod = 1e9 + 7;
const int inf= 1e18;
ll gcd(ll a, ll b){
  if (b == 0) return a;
  return gcd(b, a%b);
}

bool isvalid(ll x,ll y,ll n,ll m){
    return x>=0 && y>=0 && x<n && y<m ;
}

int binary(const std::vector<ll>& arr, ll target) {
    int left = 0;
    int right = arr.size() - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2; // Prevents potential overflow

         if (arr[mid] < target) {
            left = mid + 1;
        }
        else {
            right = mid - 1;
        }
    }
    return left;
}

bool is_prime[1000005];
void sieve_of_eratosthenes(int n)
{
    memset(is_prime, true, sizeof(is_prime));
    is_prime[0] = is_prime[1] = false;
    for (int p = 2; p * p <= n; p++) {
        if (is_prime[p]) {
            for (int i = p * p; i <= n; i += p) {
                is_prime[i] = false;
            }
        }
    }
}


ll ciel(ll a,ll b){
    if(a%b){return a/b+1;}
    else{return a/b;}
}

void solve(){
    ll n;
    cin>>n;
    vll a(n);
    for(ll i=0;i<n;i++) cin>>a[i];
    vll right(n-1,0),left(n-1,0),rside(n-1,0),lside(n-1,0);
    right[0]=1;
    rside[0]=a[1]-a[0];
    for(ll i=1;i<n-1;i++){
        if(a[i+1]-a[i] < a[i]-a[i-1]){
            right[i]=1;
            rside[i]=a[i+1]-a[i];
        }
    }
    left[n-2]=1;
    lside[n-2]=a[n-1]-a[n-2];
    for(ll i=n-2;i>0;i--){
        if(a[i]-a[i-1]<a[i+1]-a[i]){
            left[i-1]=1;
            lside[i-1]=a[i]-a[i-1];
        }
    }
    vll psr(n-1),psl(n-1),psrs(n-1),psls(n-1);
    ll total1=0,total2=0;
    for(ll i=0;i<n-1;i++){
        total1+=right[i];
        total2+=rside[i];
        psr[i]=total1;
        psrs[i]=total2;
    }
    total1=0,total2=0;
    for(ll i=0;i<n-1;i++){
        total1+=left[i];
        total2+=lside[i];
        psl[i]=total1;
        psls[i]=total2;
    }
    ll q;
    cin>>q;
    while(q--){
        ll x,y;
        cin>>x>>y;
        x--;
        y--;
        ll diff=0,ans=0;
        if(x<y){
            diff=psrs[y-1];
            ans=psr[y-1];
            if(x!=0){
                diff-=psrs[x-1];
                ans-=psr[x-1];
            }
            print(a[y]-a[x]-diff+ans);
        }
        else{
            diff=psls[x-1];
            ans=psl[x-1];
            if(y!=0){
                diff-=psls[y-1];
                ans-=psl[y-1];
            }
            print(a[x]-a[y]-diff+ans);
        }
    }
}

int main(){
    int t=1;
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin>>t;
    while(t--){
        solve();
    }
}
