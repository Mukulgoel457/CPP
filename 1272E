//------------------Mukul457-----------------------------------

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
//using namespace __gnu_pbds;
//template <typename PB>
#define ll long long int
#define be begin()
#define en end()
#define pb push_back
#define pyes cout << "Yes\n"
#define pno cout << "No\n"
#define ce cout << '\n'
#define endl '\n'
#define pie 3.141592653589793238462643383279502884197169399
#define print(x) cout<<x<<endl
#define printb(x) cout<<x<<" "
#define rev(v) reverse(v.begin(), v.end())
#define srt(v) sort(v.begin(), v.end())
#define all(v) v.begin(), v.end()
#define mnv(v) *min_element(v.begin(), v.end())
#define mxv(v) *max_element(v.begin(), v.end())
#define fi first
#define se second
#define vll vector<ll>
#define vp vector<pair<ll,ll>>
#define seev(v,n) for(ll i=0;i<n;i++){ll x; cin>>x; v.push_back(x);}
//typedef tree<ll,null_type,less_equal<ll>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

ll ciel(ll a,ll b){
    if(a%b){return a/b+1;}
    else{return a/b;}
}

vll v;
vll k;
vector<bool> vis;
ll rec(ll i){
    ll ans=INT_MAX;
    if(i+v[i]<v.size() && (v[i+v[i]])%2!=v[i]%2){
        return 1;
    }
    else if(i+v[i]<v.size() && vis[i+v[i]]) return k[i+v[i]];
    if(i-v[i]>=0 && (v[i-v[i]])%2!=v[i]%2){
        return 1;
    }
    else if(i-v[i]>=0 && vis[i-v[i]]) return k[i-v[i]];
    ll left=-1,right=-1;
    if(i-v[i]>=0){
            left=rec(i-v[i]);
            k[i-v[i]]=left;
            if(left>=0) ans=min(ans,left+1);
    }
    if(i+v[i]<v.size()){
            right=rec(i+v[i]);
            k[i+v[i]]=right;
            if(right>=0) ans=min(ans,right+1);

    }
    if(ans!=INT_MAX) return ans;
    else return -1;
}

void solve(){
    ll n;
    cin>>n;
    vll a(n);
    vector<vll> g(n);
    for (ll i = 0; i < n; i++){
        cin>>a[i];
        if((i-a[i])>=0){
            g[i-a[i]].pb(i);
        }
        if((i+a[i])<n){
            g[i+a[i]].pb(i);
        }
    }
    vll ans(n,1e9);
    queue<pair<ll,ll>> q;
    for (ll i = 0; i < n; i++){
        if(a[i]%2==0){
            q.push({i,0});
        }
    }
    while(!q.empty()){
        pair<ll,ll> p = q.front();
        q.pop();
        for(auto u:g[p.fi]){
            if(a[u] & 1){
                if(ans[u]==1e9){
                    ans[u] =p.se+1;
                    q.push({u,ans[u]});
                }
            }
        }
    }
    for(ll i = 0; i < n; i++){
        if(a[i]%2==1){
            q.push({i,0});
        }
    }
    while(!q.empty()){
        pair<ll,ll> p = q.front();
        q.pop();
        for(auto u:g[p.fi]){
            if(a[u]%2==0){
                if(ans[u]==1e9){
                    ans[u] =p.se+1;
                    q.push({u,ans[u]});
                }
            }
        }
    }
    for(ll i = 0; i < n; i++){
        if(ans[i]==1e9) printb(-1);
        else printb(ans[i]);
    }
}


int main(){
    int t=1;
    ios::sync_with_stdio(false);
    cin.tie(0);
    //cin>>t;
    while(t--){
        solve();
    }
}
